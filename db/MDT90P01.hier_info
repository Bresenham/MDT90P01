|MDT90P01
c0 => instruction_memory:instr_inst.c0
c0 => program_counter:pc_inst.c0
c0 => instruction_decoder:dec_inst.c0
c0 => w_reg:wreg_inst.c0
c0 => ram_memory:ram_inst.c0
c0 => pipeline_state:pipe_inst.c0
c0 => stack:stack_int.c0
pc[0] <> pc[0]
pc[1] <> pc[1]
pc[2] <> pc[2]
pc[3] <> pc[3]
pc[4] <> pc[4]
pc[5] <> pc[5]
pc[6] <> pc[6]
pc[7] <> pc[7]
pc[8] <> pc[8]
pc_skip <> pc_skip
instruction[0] <> instruction[0]
instruction[1] <> instruction[1]
instruction[2] <> instruction[2]
instruction[3] <> instruction[3]
instruction[4] <> instruction[4]
instruction[5] <> instruction[5]
instruction[6] <> instruction[6]
instruction[7] <> instruction[7]
instruction[8] <> instruction[8]
instruction[9] <> instruction[9]
instruction[10] <> instruction[10]
write_tmrl <> <UNC>
write_tmrh <> <UNC>
write_cpio <> <UNC>
read_w <> read_w
write_w <> write_w
reg_write_en <> reg_write_en
reg_read_en <> reg_read_en
place_immediate <> place_immediate
immediate[0] <> immediate[0]
immediate[1] <> immediate[1]
immediate[2] <> immediate[2]
immediate[3] <> immediate[3]
reg_addr[0] <> reg_addr[0]
reg_addr[1] <> reg_addr[1]
reg_addr[2] <> reg_addr[2]
reg_addr[3] <> reg_addr[3]
reg_addr[4] <> reg_addr[4]
reg_read_data[0] <> reg_read_data[0]
reg_read_data[1] <> reg_read_data[1]
reg_read_data[2] <> reg_read_data[2]
reg_read_data[3] <> reg_read_data[3]
reg_write_data[0] <> reg_write_data[0]
reg_write_data[1] <> reg_write_data[1]
reg_write_data[2] <> reg_write_data[2]
reg_write_data[3] <> reg_write_data[3]
ram_top[0] <> ram_top[0]
ram_top[1] <> ram_top[1]
ram_top[2] <> ram_top[2]
ram_top[3] <> ram_top[3]
w_reg_top[0] <> w_reg_top[0]
w_reg_top[1] <> w_reg_top[1]
w_reg_top[2] <> w_reg_top[2]
w_reg_top[3] <> w_reg_top[3]
w_to_ram <> w_to_ram
is_add <> is_add
is_ret <> instruction_decoder:dec_inst.is_ret
is_jump <> instruction_decoder:dec_inst.is_jump
jump_addr[0] <> instruction_decoder:dec_inst.jump_addr[0]
jump_addr[1] <> instruction_decoder:dec_inst.jump_addr[1]
jump_addr[2] <> instruction_decoder:dec_inst.jump_addr[2]
jump_addr[3] <> instruction_decoder:dec_inst.jump_addr[3]
jump_addr[4] <> instruction_decoder:dec_inst.jump_addr[4]
jump_addr[5] <> instruction_decoder:dec_inst.jump_addr[5]
jump_addr[6] <> instruction_decoder:dec_inst.jump_addr[6]
jump_addr[7] <> instruction_decoder:dec_inst.jump_addr[7]
jump_addr[8] <> instruction_decoder:dec_inst.jump_addr[8]
ret_addr[0] <> ret_addr[0]
ret_addr[1] <> ret_addr[1]
ret_addr[2] <> ret_addr[2]
ret_addr[3] <> ret_addr[3]
ret_addr[4] <> ret_addr[4]
ret_addr[5] <> ret_addr[5]
ret_addr[6] <> ret_addr[6]
ret_addr[7] <> ret_addr[7]
ret_addr[8] <> ret_addr[8]
stack_lvl_1[0] <> stack_lvl_1[0]
stack_lvl_1[1] <> stack_lvl_1[1]
stack_lvl_1[2] <> stack_lvl_1[2]
stack_lvl_1[3] <> stack_lvl_1[3]
stack_lvl_1[4] <> stack_lvl_1[4]
stack_lvl_1[5] <> stack_lvl_1[5]
stack_lvl_1[6] <> stack_lvl_1[6]
stack_lvl_1[7] <> stack_lvl_1[7]
stack_lvl_1[8] <> stack_lvl_1[8]
stack_lvl_2[0] <> stack_lvl_2[0]
stack_lvl_2[1] <> stack_lvl_2[1]
stack_lvl_2[2] <> stack_lvl_2[2]
stack_lvl_2[3] <> stack_lvl_2[3]
stack_lvl_2[4] <> stack_lvl_2[4]
stack_lvl_2[5] <> stack_lvl_2[5]
stack_lvl_2[6] <> stack_lvl_2[6]
stack_lvl_2[7] <> stack_lvl_2[7]
stack_lvl_2[8] <> stack_lvl_2[8]
idx_out[0] <> idx_out[0]
bit_set <> bit_set
bit_clear <> bit_clear
bit_pos[0] <> bit_pos[0]
bit_pos[1] <> bit_pos[1]
bit_test <> bit_test
bit_skip_clear <> bit_skip_clear
state[0] <> state[0]
state[1] <> state[1]
state[2] <> state[2]


|MDT90P01|Instruction_Memory:instr_inst
pc[0] => Mux0.IN5
pc[0] => Mux1.IN10
pc[0] => Mux2.IN10
pc[0] => Mux3.IN5
pc[0] => Mux4.IN5
pc[0] => Mux5.IN5
pc[0] => instruction[8]~reg0.DATAIN
pc[1] => Mux0.IN4
pc[1] => Mux1.IN9
pc[1] => Mux2.IN9
pc[1] => Mux3.IN4
pc[1] => Mux4.IN4
pc[2] => Mux1.IN8
pc[2] => Mux2.IN8
pc[2] => Mux5.IN4
pc[3] => ~NO_FANOUT~
pc[4] => ~NO_FANOUT~
pc[5] => ~NO_FANOUT~
pc[6] => ~NO_FANOUT~
pc[7] => ~NO_FANOUT~
pc[8] => ~NO_FANOUT~
instruction[0] <= instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[1] <= instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[2] <= instruction[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[3] <= instruction[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[4] <= instruction[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[5] <= instruction[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[6] <= instruction[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[7] <= instruction[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[8] <= instruction[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[9] <= instruction[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
instruction[10] <= instruction[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[0] => Equal0.IN5
state[1] => Equal0.IN4
state[2] => Equal0.IN3
c0 => instruction[0]~reg0.CLK
c0 => instruction[1]~reg0.CLK
c0 => instruction[2]~reg0.CLK
c0 => instruction[3]~reg0.CLK
c0 => instruction[4]~reg0.CLK
c0 => instruction[5]~reg0.CLK
c0 => instruction[6]~reg0.CLK
c0 => instruction[7]~reg0.CLK
c0 => instruction[8]~reg0.CLK
c0 => instruction[9]~reg0.CLK
c0 => instruction[10]~reg0.CLK


|MDT90P01|Program_Counter:pc_inst
c0 => pc_int[0].CLK
c0 => pc_int[1].CLK
c0 => pc_int[2].CLK
c0 => pc_int[3].CLK
c0 => pc_int[4].CLK
c0 => pc_int[5].CLK
c0 => pc_int[6].CLK
c0 => pc_int[7].CLK
c0 => pc_int[8].CLK
pc[0] <= pc_int[0].DB_MAX_OUTPUT_PORT_TYPE
pc[1] <= pc_int[1].DB_MAX_OUTPUT_PORT_TYPE
pc[2] <= pc_int[2].DB_MAX_OUTPUT_PORT_TYPE
pc[3] <= pc_int[3].DB_MAX_OUTPUT_PORT_TYPE
pc[4] <= pc_int[4].DB_MAX_OUTPUT_PORT_TYPE
pc[5] <= pc_int[5].DB_MAX_OUTPUT_PORT_TYPE
pc[6] <= pc_int[6].DB_MAX_OUTPUT_PORT_TYPE
pc[7] <= pc_int[7].DB_MAX_OUTPUT_PORT_TYPE
pc[8] <= pc_int[8].DB_MAX_OUTPUT_PORT_TYPE
is_jump => pc_int.OUTPUTSELECT
is_jump => pc_int.OUTPUTSELECT
is_jump => pc_int.OUTPUTSELECT
is_jump => pc_int.OUTPUTSELECT
is_jump => pc_int.OUTPUTSELECT
is_jump => pc_int.OUTPUTSELECT
is_jump => pc_int.OUTPUTSELECT
is_jump => pc_int.OUTPUTSELECT
is_jump => pc_int.OUTPUTSELECT
jump_addr[0] => pc_int.DATAB
jump_addr[1] => pc_int.DATAB
jump_addr[2] => pc_int.DATAB
jump_addr[3] => pc_int.DATAB
jump_addr[4] => pc_int.DATAB
jump_addr[5] => pc_int.DATAB
jump_addr[6] => pc_int.DATAB
jump_addr[7] => pc_int.DATAB
jump_addr[8] => pc_int.DATAB
is_ret => pc_int.OUTPUTSELECT
is_ret => pc_int.OUTPUTSELECT
is_ret => pc_int.OUTPUTSELECT
is_ret => pc_int.OUTPUTSELECT
is_ret => pc_int.OUTPUTSELECT
is_ret => pc_int.OUTPUTSELECT
is_ret => pc_int.OUTPUTSELECT
is_ret => pc_int.OUTPUTSELECT
is_ret => pc_int.OUTPUTSELECT
ret_addr[0] => pc_int.DATAB
ret_addr[1] => pc_int.DATAB
ret_addr[2] => pc_int.DATAB
ret_addr[3] => pc_int.DATAB
ret_addr[4] => pc_int.DATAB
ret_addr[5] => pc_int.DATAB
ret_addr[6] => pc_int.DATAB
ret_addr[7] => pc_int.DATAB
ret_addr[8] => pc_int.DATAB
pc_skip => pc_int.OUTPUTSELECT
pc_skip => pc_int.OUTPUTSELECT
pc_skip => pc_int.OUTPUTSELECT
pc_skip => pc_int.OUTPUTSELECT
pc_skip => pc_int.OUTPUTSELECT
pc_skip => pc_int.OUTPUTSELECT
pc_skip => pc_int.OUTPUTSELECT
pc_skip => pc_int.OUTPUTSELECT
pc_skip => pc_int.OUTPUTSELECT
state[0] => Equal0.IN5
state[1] => Equal0.IN4
state[2] => Equal0.IN3


|MDT90P01|Instruction_Decoder:dec_inst
c0 => jump_addr[0]~reg0.CLK
c0 => jump_addr[1]~reg0.CLK
c0 => jump_addr[2]~reg0.CLK
c0 => jump_addr[3]~reg0.CLK
c0 => jump_addr[4]~reg0.CLK
c0 => jump_addr[5]~reg0.CLK
c0 => jump_addr[6]~reg0.CLK
c0 => jump_addr[7]~reg0.CLK
c0 => jump_addr[8]~reg0.CLK
c0 => bit_pos[0]~reg0.CLK
c0 => bit_pos[1]~reg0.CLK
c0 => reg_addr[0]~reg0.CLK
c0 => reg_addr[1]~reg0.CLK
c0 => reg_addr[2]~reg0.CLK
c0 => reg_addr[3]~reg0.CLK
c0 => reg_addr[4]~reg0.CLK
c0 => immediate[0]~reg0.CLK
c0 => immediate[1]~reg0.CLK
c0 => immediate[2]~reg0.CLK
c0 => immediate[3]~reg0.CLK
c0 => bit_skip_clear~reg0.CLK
c0 => bit_test~reg0.CLK
c0 => bit_clear~reg0.CLK
c0 => bit_set~reg0.CLK
c0 => is_jump~reg0.CLK
c0 => is_ret~reg0.CLK
c0 => place_immediate~reg0.CLK
c0 => reg_read_en~reg0.CLK
c0 => reg_write_en~reg0.CLK
c0 => write_w~reg0.CLK
c0 => read_w~reg0.CLK
c0 => write_cpio~reg0.CLK
c0 => write_tmrl~reg0.CLK
c0 => write_tmrh~reg0.CLK
c0 => is_add~reg0.CLK
instruction[0] => Equal1.IN21
instruction[0] => Equal2.IN21
instruction[0] => reg_addr.DATAB
instruction[0] => reg_addr.DATAB
instruction[0] => reg_addr.DATAB
instruction[0] => reg_addr.DATAB
instruction[0] => reg_addr.DATAB
instruction[0] => reg_addr.DATAB
instruction[0] => reg_addr.DATAB
instruction[0] => reg_addr.DATAB
instruction[0] => immediate.DATAB
instruction[0] => immediate.DATAB
instruction[0] => jump_addr.DATAB
instruction[1] => Equal1.IN20
instruction[1] => Equal2.IN20
instruction[1] => reg_addr.DATAB
instruction[1] => reg_addr.DATAB
instruction[1] => reg_addr.DATAB
instruction[1] => reg_addr.DATAB
instruction[1] => reg_addr.DATAB
instruction[1] => reg_addr.DATAB
instruction[1] => reg_addr.DATAB
instruction[1] => reg_addr.DATAB
instruction[1] => immediate.DATAB
instruction[1] => immediate.DATAB
instruction[1] => jump_addr.DATAB
instruction[2] => Equal1.IN19
instruction[2] => Equal2.IN19
instruction[2] => reg_addr.DATAB
instruction[2] => reg_addr.DATAB
instruction[2] => reg_addr.DATAB
instruction[2] => reg_addr.DATAB
instruction[2] => reg_addr.DATAB
instruction[2] => reg_addr.DATAB
instruction[2] => reg_addr.DATAB
instruction[2] => reg_addr.DATAB
instruction[2] => immediate.DATAB
instruction[2] => immediate.DATAB
instruction[2] => jump_addr.DATAB
instruction[3] => Equal1.IN18
instruction[3] => Equal2.IN18
instruction[3] => Equal3.IN15
instruction[3] => reg_addr.DATAB
instruction[3] => reg_addr.DATAB
instruction[3] => reg_addr.DATAB
instruction[3] => reg_addr.DATAB
instruction[3] => reg_addr.DATAB
instruction[3] => reg_addr.DATAB
instruction[3] => reg_addr.DATAB
instruction[3] => immediate.DATAB
instruction[3] => immediate.DATAB
instruction[3] => jump_addr.DATAB
instruction[4] => Equal1.IN17
instruction[4] => Equal2.IN17
instruction[4] => Equal3.IN14
instruction[4] => Equal6.IN13
instruction[4] => Equal9.IN13
instruction[4] => reg_addr.DATAB
instruction[4] => reg_addr.DATAB
instruction[4] => reg_addr.DATAB
instruction[4] => reg_addr.DATAB
instruction[4] => reg_addr.DATAB
instruction[4] => reg_addr.DATAB
instruction[4] => reg_addr.DATAB
instruction[4] => jump_addr.DATAB
instruction[5] => Equal1.IN16
instruction[5] => Equal2.IN16
instruction[5] => Equal3.IN13
instruction[5] => Equal4.IN11
instruction[5] => Equal5.IN11
instruction[5] => Equal6.IN12
instruction[5] => Equal7.IN7
instruction[5] => Equal9.IN12
instruction[5] => jump_addr.DATAB
instruction[5] => bit_pos.DATAB
instruction[5] => bit_pos.DATAB
instruction[5] => bit_pos.DATAB
instruction[5] => bit_pos.DATAB
instruction[6] => Equal1.IN15
instruction[6] => Equal2.IN15
instruction[6] => Equal3.IN12
instruction[6] => Equal4.IN10
instruction[6] => Equal5.IN10
instruction[6] => Equal6.IN11
instruction[6] => Equal7.IN6
instruction[6] => Equal9.IN11
instruction[6] => jump_addr.DATAB
instruction[6] => bit_pos.DATAB
instruction[6] => bit_pos.DATAB
instruction[6] => bit_pos.DATAB
instruction[6] => bit_pos.DATAB
instruction[7] => Equal1.IN14
instruction[7] => Equal2.IN14
instruction[7] => Equal3.IN11
instruction[7] => Equal4.IN9
instruction[7] => Equal5.IN9
instruction[7] => Equal6.IN10
instruction[7] => Equal7.IN5
instruction[7] => Equal9.IN10
instruction[7] => Equal10.IN7
instruction[7] => Equal11.IN7
instruction[7] => Equal12.IN7
instruction[7] => Equal13.IN7
instruction[7] => jump_addr.DATAB
instruction[8] => Equal1.IN13
instruction[8] => Equal2.IN13
instruction[8] => Equal3.IN10
instruction[8] => Equal4.IN8
instruction[8] => Equal5.IN8
instruction[8] => Equal6.IN9
instruction[8] => Equal7.IN4
instruction[8] => Equal9.IN9
instruction[8] => Equal10.IN6
instruction[8] => Equal11.IN6
instruction[8] => Equal12.IN6
instruction[8] => Equal13.IN6
instruction[8] => jump_addr.DATAB
instruction[9] => Equal1.IN12
instruction[9] => Equal2.IN12
instruction[9] => Equal3.IN9
instruction[9] => Equal4.IN7
instruction[9] => Equal5.IN7
instruction[9] => Equal6.IN8
instruction[9] => Equal8.IN3
instruction[9] => Equal9.IN8
instruction[9] => Equal10.IN5
instruction[9] => Equal11.IN5
instruction[9] => Equal12.IN5
instruction[9] => Equal13.IN5
instruction[9] => write_w.DATAB
instruction[10] => Equal1.IN11
instruction[10] => Equal2.IN11
instruction[10] => Equal3.IN8
instruction[10] => Equal4.IN6
instruction[10] => Equal5.IN6
instruction[10] => Equal6.IN7
instruction[10] => process_0.IN1
instruction[10] => Equal8.IN2
instruction[10] => Equal9.IN7
instruction[10] => Equal10.IN4
instruction[10] => Equal11.IN4
instruction[10] => Equal12.IN4
instruction[10] => Equal13.IN4
state[0] => Equal0.IN5
state[1] => Equal0.IN4
state[2] => Equal0.IN3
is_add <= is_add~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_tmrl <= write_tmrl~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_tmrh <= write_tmrh~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_cpio <= write_cpio~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_w <= read_w~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_w <= write_w~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_write_en <= reg_write_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_read_en <= reg_read_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
place_immediate <= place_immediate~reg0.DB_MAX_OUTPUT_PORT_TYPE
immediate[0] <= immediate[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
immediate[1] <= immediate[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
immediate[2] <= immediate[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
immediate[3] <= immediate[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_addr[0] <= reg_addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_addr[1] <= reg_addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_addr[2] <= reg_addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_addr[3] <= reg_addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_addr[4] <= reg_addr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
is_ret <> is_ret~reg0
is_jump <> is_jump~reg0
jump_addr[0] <> jump_addr[0]~reg0
jump_addr[1] <> jump_addr[1]~reg0
jump_addr[2] <> jump_addr[2]~reg0
jump_addr[3] <> jump_addr[3]~reg0
jump_addr[4] <> jump_addr[4]~reg0
jump_addr[5] <> jump_addr[5]~reg0
jump_addr[6] <> jump_addr[6]~reg0
jump_addr[7] <> jump_addr[7]~reg0
jump_addr[8] <> jump_addr[8]~reg0
bit_set <= bit_set~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_clear <= bit_clear~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_pos[0] <= bit_pos[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_pos[1] <= bit_pos[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_test <= bit_test~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_skip_clear <= bit_skip_clear~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MDT90P01|W_Reg:wreg_inst
c0 => w_content[0].CLK
c0 => w_content[1].CLK
c0 => w_content[2].CLK
c0 => w_content[3].CLK
c0 => reg_write_data[0]~reg0.CLK
c0 => reg_write_data[1]~reg0.CLK
c0 => reg_write_data[2]~reg0.CLK
c0 => reg_write_data[3]~reg0.CLK
c0 => w_to_ram~reg0.CLK
read_w => reg_write_data.OUTPUTSELECT
read_w => reg_write_data.OUTPUTSELECT
read_w => reg_write_data.OUTPUTSELECT
read_w => reg_write_data.OUTPUTSELECT
read_w => w_content.OUTPUTSELECT
read_w => w_content.OUTPUTSELECT
read_w => w_content.OUTPUTSELECT
read_w => w_content.OUTPUTSELECT
read_w => w_to_ram.OUTPUTSELECT
write_w => reg_write_data.OUTPUTSELECT
write_w => reg_write_data.OUTPUTSELECT
write_w => reg_write_data.OUTPUTSELECT
write_w => reg_write_data.OUTPUTSELECT
write_w => w_content.OUTPUTSELECT
write_w => w_content.OUTPUTSELECT
write_w => w_content.OUTPUTSELECT
write_w => w_content.OUTPUTSELECT
write_w => w_to_ram.OUTPUTSELECT
place_immediate => w_content.OUTPUTSELECT
place_immediate => w_content.OUTPUTSELECT
place_immediate => w_content.OUTPUTSELECT
place_immediate => w_content.OUTPUTSELECT
is_add => w_content.OUTPUTSELECT
is_add => w_content.OUTPUTSELECT
is_add => w_content.OUTPUTSELECT
is_add => w_content.OUTPUTSELECT
is_add => reg_write_data.OUTPUTSELECT
is_add => reg_write_data.OUTPUTSELECT
is_add => reg_write_data.OUTPUTSELECT
is_add => reg_write_data.OUTPUTSELECT
is_add => w_to_ram.DATAA
reg_write_data[0] <= reg_write_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_write_data[1] <= reg_write_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_write_data[2] <= reg_write_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_write_data[3] <= reg_write_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data[0] => w_content.DATAA
reg_read_data[0] => Add0.IN4
reg_read_data[1] => w_content.DATAA
reg_read_data[1] => Add0.IN3
reg_read_data[2] => w_content.DATAA
reg_read_data[2] => Add0.IN2
reg_read_data[3] => w_content.DATAA
reg_read_data[3] => Add0.IN1
immediate[0] => w_content.DATAB
immediate[1] => w_content.DATAB
immediate[2] => w_content.DATAB
immediate[3] => w_content.DATAB
w_reg_top[0] <= w_content[0].DB_MAX_OUTPUT_PORT_TYPE
w_reg_top[1] <= w_content[1].DB_MAX_OUTPUT_PORT_TYPE
w_reg_top[2] <= w_content[2].DB_MAX_OUTPUT_PORT_TYPE
w_reg_top[3] <= w_content[3].DB_MAX_OUTPUT_PORT_TYPE
w_to_ram <= w_to_ram~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[0] => Equal0.IN5
state[1] => Equal0.IN4
state[2] => Equal0.IN3


|MDT90P01|RAM_Memory:ram_inst
c0 => reg_array[29][0].CLK
c0 => reg_array[29][1].CLK
c0 => reg_array[29][2].CLK
c0 => reg_array[29][3].CLK
c0 => reg_array[28][0].CLK
c0 => reg_array[28][1].CLK
c0 => reg_array[28][2].CLK
c0 => reg_array[28][3].CLK
c0 => reg_array[27][0].CLK
c0 => reg_array[27][1].CLK
c0 => reg_array[27][2].CLK
c0 => reg_array[27][3].CLK
c0 => reg_array[26][0].CLK
c0 => reg_array[26][1].CLK
c0 => reg_array[26][2].CLK
c0 => reg_array[26][3].CLK
c0 => reg_array[25][0].CLK
c0 => reg_array[25][1].CLK
c0 => reg_array[25][2].CLK
c0 => reg_array[25][3].CLK
c0 => reg_array[24][0].CLK
c0 => reg_array[24][1].CLK
c0 => reg_array[24][2].CLK
c0 => reg_array[24][3].CLK
c0 => reg_array[23][0].CLK
c0 => reg_array[23][1].CLK
c0 => reg_array[23][2].CLK
c0 => reg_array[23][3].CLK
c0 => reg_array[22][0].CLK
c0 => reg_array[22][1].CLK
c0 => reg_array[22][2].CLK
c0 => reg_array[22][3].CLK
c0 => reg_array[21][0].CLK
c0 => reg_array[21][1].CLK
c0 => reg_array[21][2].CLK
c0 => reg_array[21][3].CLK
c0 => reg_array[20][0].CLK
c0 => reg_array[20][1].CLK
c0 => reg_array[20][2].CLK
c0 => reg_array[20][3].CLK
c0 => reg_array[19][0].CLK
c0 => reg_array[19][1].CLK
c0 => reg_array[19][2].CLK
c0 => reg_array[19][3].CLK
c0 => reg_array[18][0].CLK
c0 => reg_array[18][1].CLK
c0 => reg_array[18][2].CLK
c0 => reg_array[18][3].CLK
c0 => reg_array[17][0].CLK
c0 => reg_array[17][1].CLK
c0 => reg_array[17][2].CLK
c0 => reg_array[17][3].CLK
c0 => reg_array[16][0].CLK
c0 => reg_array[16][1].CLK
c0 => reg_array[16][2].CLK
c0 => reg_array[16][3].CLK
c0 => reg_array[15][0].CLK
c0 => reg_array[15][1].CLK
c0 => reg_array[15][2].CLK
c0 => reg_array[15][3].CLK
c0 => reg_array[14][0].CLK
c0 => reg_array[14][1].CLK
c0 => reg_array[14][2].CLK
c0 => reg_array[14][3].CLK
c0 => reg_array[13][0].CLK
c0 => reg_array[13][1].CLK
c0 => reg_array[13][2].CLK
c0 => reg_array[13][3].CLK
c0 => reg_array[12][0].CLK
c0 => reg_array[12][1].CLK
c0 => reg_array[12][2].CLK
c0 => reg_array[12][3].CLK
c0 => reg_array[11][0].CLK
c0 => reg_array[11][1].CLK
c0 => reg_array[11][2].CLK
c0 => reg_array[11][3].CLK
c0 => reg_array[10][0].CLK
c0 => reg_array[10][1].CLK
c0 => reg_array[10][2].CLK
c0 => reg_array[10][3].CLK
c0 => reg_array[9][0].CLK
c0 => reg_array[9][1].CLK
c0 => reg_array[9][2].CLK
c0 => reg_array[9][3].CLK
c0 => reg_array[8][0].CLK
c0 => reg_array[8][1].CLK
c0 => reg_array[8][2].CLK
c0 => reg_array[8][3].CLK
c0 => reg_array[7][0].CLK
c0 => reg_array[7][1].CLK
c0 => reg_array[7][2].CLK
c0 => reg_array[7][3].CLK
c0 => reg_array[6][0].CLK
c0 => reg_array[6][1].CLK
c0 => reg_array[6][2].CLK
c0 => reg_array[6][3].CLK
c0 => reg_array[5][0].CLK
c0 => reg_array[5][1].CLK
c0 => reg_array[5][2].CLK
c0 => reg_array[5][3].CLK
c0 => reg_array[4][0].CLK
c0 => reg_array[4][1].CLK
c0 => reg_array[4][2].CLK
c0 => reg_array[4][3].CLK
c0 => reg_array[3][0].CLK
c0 => reg_array[3][1].CLK
c0 => reg_array[3][2].CLK
c0 => reg_array[3][3].CLK
c0 => reg_array[2][0].CLK
c0 => reg_array[2][1].CLK
c0 => reg_array[2][2].CLK
c0 => reg_array[2][3].CLK
c0 => reg_array[1][0].CLK
c0 => reg_array[1][1].CLK
c0 => reg_array[1][2].CLK
c0 => reg_array[1][3].CLK
c0 => reg_array[0][0].CLK
c0 => reg_array[0][1].CLK
c0 => reg_array[0][2].CLK
c0 => reg_array[0][3].CLK
c0 => reg_read_data[0]~reg0.CLK
c0 => reg_read_data[1]~reg0.CLK
c0 => reg_read_data[2]~reg0.CLK
c0 => reg_read_data[3]~reg0.CLK
c0 => pc_skip~reg0.CLK
reg_write_en => process_0.IN0
reg_read_en => pc_skip.OUTPUTSELECT
reg_read_en => reg_read_data.OUTPUTSELECT
reg_read_en => reg_read_data.OUTPUTSELECT
reg_read_en => reg_read_data.OUTPUTSELECT
reg_read_en => reg_read_data.OUTPUTSELECT
reg_addr[0] => Decoder1.IN4
reg_addr[0] => Mux30.IN36
reg_addr[0] => Mux31.IN6
reg_addr[0] => Mux32.IN6
reg_addr[0] => Mux33.IN6
reg_addr[0] => Mux34.IN6
reg_addr[1] => Decoder1.IN3
reg_addr[1] => Mux30.IN35
reg_addr[1] => Mux31.IN5
reg_addr[1] => Mux32.IN5
reg_addr[1] => Mux33.IN5
reg_addr[1] => Mux34.IN5
reg_addr[2] => Decoder1.IN2
reg_addr[2] => Mux30.IN34
reg_addr[2] => Mux31.IN4
reg_addr[2] => Mux32.IN4
reg_addr[2] => Mux33.IN4
reg_addr[2] => Mux34.IN4
reg_addr[3] => Decoder1.IN1
reg_addr[3] => Mux30.IN33
reg_addr[3] => Mux31.IN3
reg_addr[3] => Mux32.IN3
reg_addr[3] => Mux33.IN3
reg_addr[3] => Mux34.IN3
reg_addr[4] => Decoder1.IN0
reg_addr[4] => Mux30.IN32
reg_addr[4] => Mux31.IN2
reg_addr[4] => Mux32.IN2
reg_addr[4] => Mux33.IN2
reg_addr[4] => Mux34.IN2
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_read_data[0] <= reg_read_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data[1] <= reg_read_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data[2] <= reg_read_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data[3] <= reg_read_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_set => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_clear => reg_array.OUTPUTSELECT
bit_pos[0] => Decoder0.IN1
bit_pos[0] => Mux0.IN1
bit_pos[0] => Mux1.IN1
bit_pos[0] => Mux2.IN1
bit_pos[0] => Mux3.IN1
bit_pos[0] => Mux4.IN1
bit_pos[0] => Mux5.IN1
bit_pos[0] => Mux6.IN1
bit_pos[0] => Mux7.IN1
bit_pos[0] => Mux8.IN1
bit_pos[0] => Mux9.IN1
bit_pos[0] => Mux10.IN1
bit_pos[0] => Mux11.IN1
bit_pos[0] => Mux12.IN1
bit_pos[0] => Mux13.IN1
bit_pos[0] => Mux14.IN1
bit_pos[0] => Mux15.IN1
bit_pos[0] => Mux16.IN1
bit_pos[0] => Mux17.IN1
bit_pos[0] => Mux18.IN1
bit_pos[0] => Mux19.IN1
bit_pos[0] => Mux20.IN1
bit_pos[0] => Mux21.IN1
bit_pos[0] => Mux22.IN1
bit_pos[0] => Mux23.IN1
bit_pos[0] => Mux24.IN1
bit_pos[0] => Mux25.IN1
bit_pos[0] => Mux26.IN1
bit_pos[0] => Mux27.IN1
bit_pos[0] => Mux28.IN1
bit_pos[0] => Mux29.IN1
bit_pos[1] => Decoder0.IN0
bit_pos[1] => Mux0.IN0
bit_pos[1] => Mux1.IN0
bit_pos[1] => Mux2.IN0
bit_pos[1] => Mux3.IN0
bit_pos[1] => Mux4.IN0
bit_pos[1] => Mux5.IN0
bit_pos[1] => Mux6.IN0
bit_pos[1] => Mux7.IN0
bit_pos[1] => Mux8.IN0
bit_pos[1] => Mux9.IN0
bit_pos[1] => Mux10.IN0
bit_pos[1] => Mux11.IN0
bit_pos[1] => Mux12.IN0
bit_pos[1] => Mux13.IN0
bit_pos[1] => Mux14.IN0
bit_pos[1] => Mux15.IN0
bit_pos[1] => Mux16.IN0
bit_pos[1] => Mux17.IN0
bit_pos[1] => Mux18.IN0
bit_pos[1] => Mux19.IN0
bit_pos[1] => Mux20.IN0
bit_pos[1] => Mux21.IN0
bit_pos[1] => Mux22.IN0
bit_pos[1] => Mux23.IN0
bit_pos[1] => Mux24.IN0
bit_pos[1] => Mux25.IN0
bit_pos[1] => Mux26.IN0
bit_pos[1] => Mux27.IN0
bit_pos[1] => Mux28.IN0
bit_pos[1] => Mux29.IN0
bit_skip_clear => process_0.IN1
bit_skip_clear => process_0.IN1
bit_test => pc_skip.OUTPUTSELECT
bit_test => reg_read_data.OUTPUTSELECT
bit_test => reg_read_data.OUTPUTSELECT
bit_test => reg_read_data.OUTPUTSELECT
bit_test => reg_read_data.OUTPUTSELECT
ram_top[0] <= reg_array[0][0].DB_MAX_OUTPUT_PORT_TYPE
ram_top[1] <= reg_array[0][1].DB_MAX_OUTPUT_PORT_TYPE
ram_top[2] <= reg_array[0][2].DB_MAX_OUTPUT_PORT_TYPE
ram_top[3] <= reg_array[0][3].DB_MAX_OUTPUT_PORT_TYPE
pc_skip <= pc_skip~reg0.DB_MAX_OUTPUT_PORT_TYPE
w_to_ram => process_0.IN1
state[0] => Equal0.IN5
state[0] => Equal1.IN5
state[1] => Equal0.IN4
state[1] => Equal1.IN4
state[2] => Equal0.IN3
state[2] => Equal1.IN3


|MDT90P01|Pipeline_State:pipe_inst
c0 => state_mem[0].CLK
c0 => state_mem[1].CLK
c0 => state_mem[2].CLK
state[0] <= state_mem[0].DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state_mem[1].DB_MAX_OUTPUT_PORT_TYPE
state[2] <= state_mem[2].DB_MAX_OUTPUT_PORT_TYPE


|MDT90P01|Stack:stack_int
c0 => stack_int[1][0].CLK
c0 => stack_int[1][1].CLK
c0 => stack_int[1][2].CLK
c0 => stack_int[1][3].CLK
c0 => stack_int[1][4].CLK
c0 => stack_int[1][5].CLK
c0 => stack_int[1][6].CLK
c0 => stack_int[1][7].CLK
c0 => stack_int[1][8].CLK
c0 => stack_int[0][0].CLK
c0 => stack_int[0][1].CLK
c0 => stack_int[0][2].CLK
c0 => stack_int[0][3].CLK
c0 => stack_int[0][4].CLK
c0 => stack_int[0][5].CLK
c0 => stack_int[0][6].CLK
c0 => stack_int[0][7].CLK
c0 => stack_int[0][8].CLK
c0 => idx[0].CLK
c0 => ret_addr[0]~reg0.CLK
c0 => ret_addr[1]~reg0.CLK
c0 => ret_addr[2]~reg0.CLK
c0 => ret_addr[3]~reg0.CLK
c0 => ret_addr[4]~reg0.CLK
c0 => ret_addr[5]~reg0.CLK
c0 => ret_addr[6]~reg0.CLK
c0 => ret_addr[7]~reg0.CLK
c0 => ret_addr[8]~reg0.CLK
is_ret => ret_addr.OUTPUTSELECT
is_ret => ret_addr.OUTPUTSELECT
is_ret => ret_addr.OUTPUTSELECT
is_ret => ret_addr.OUTPUTSELECT
is_ret => ret_addr.OUTPUTSELECT
is_ret => ret_addr.OUTPUTSELECT
is_ret => ret_addr.OUTPUTSELECT
is_ret => ret_addr.OUTPUTSELECT
is_ret => ret_addr.OUTPUTSELECT
is_ret => idx.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_ret => stack_int.OUTPUTSELECT
is_jump => idx.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
is_jump => stack_int.OUTPUTSELECT
pc[0] => Add0.IN18
pc[1] => Add0.IN17
pc[2] => Add0.IN16
pc[3] => Add0.IN15
pc[4] => Add0.IN14
pc[5] => Add0.IN13
pc[6] => Add0.IN12
pc[7] => Add0.IN11
pc[8] => Add0.IN10
ret_addr[0] <= ret_addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ret_addr[1] <= ret_addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ret_addr[2] <= ret_addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ret_addr[3] <= ret_addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ret_addr[4] <= ret_addr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ret_addr[5] <= ret_addr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ret_addr[6] <= ret_addr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ret_addr[7] <= ret_addr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ret_addr[8] <= ret_addr[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[0] => Equal0.IN5
state[1] => Equal0.IN4
state[2] => Equal0.IN3
stack_lvl_1[0] <= stack_int[0][0].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_1[1] <= stack_int[0][1].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_1[2] <= stack_int[0][2].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_1[3] <= stack_int[0][3].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_1[4] <= stack_int[0][4].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_1[5] <= stack_int[0][5].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_1[6] <= stack_int[0][6].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_1[7] <= stack_int[0][7].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_1[8] <= stack_int[0][8].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_2[0] <= stack_int[1][0].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_2[1] <= stack_int[1][1].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_2[2] <= stack_int[1][2].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_2[3] <= stack_int[1][3].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_2[4] <= stack_int[1][4].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_2[5] <= stack_int[1][5].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_2[6] <= stack_int[1][6].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_2[7] <= stack_int[1][7].DB_MAX_OUTPUT_PORT_TYPE
stack_lvl_2[8] <= stack_int[1][8].DB_MAX_OUTPUT_PORT_TYPE
idx_out[0] <= idx[0].DB_MAX_OUTPUT_PORT_TYPE


